package com.smcsolutions.smcsolutions.controladores;

import java.util.ArrayList;


import com.scrummastercolombia.stcsolution.Modelo.Enterprise;
import com.scrummastercolombia.stcsolution.Modelo.ObjetAnswer;
import com.scrummastercolombia.stcsolution.Service.ServiceInterfaceEnterprise;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.nio.file.Path;
import java.util.List;


@RestController
public class RestControllerEnterprise {

    //Hacemos la inyeccion del objeto de tipo ServiceInterfaceEnterprise

    @Autowired
    ServiceInterfaceEnterprise serviceInterfaceEnterprise;

    //Creamos los Mapping

    //Mapping para listar los enterprise

    @GetMapping("/ListEnterprise")
    public ResponseEntity <List<Enterprise>> getEnterprise(){
        return new ResponseEntity<>(serviceInterfaceEnterprise.getEnterprise(), HttpStatus.ACCEPTED);

    }

    //Mapping para traer una sola enterprise

    @GetMapping("/OneEnterprise/{idEnterprise}")
    public ResponseEntity<Object> getEnterprisePath(@PathVariable Long idEnterprise){
        try {
            Enterprise EnterpriseX = serviceInterfaceEnterprise.getOnlyOneEnterprise(idEnterprise);
            return new ResponseEntity<>(EnterpriseX,HttpStatus.OK);
        }catch (Exception e){
            return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
        }

    }

    //Mapping para crear una enterprise

    @PostMapping("/CreateEnterprise")
    public ResponseEntity<String> PostCreateEnterprise(@RequestBody Enterprise EnterpriseX){
        try {
            String message = serviceInterfaceEnterprise.getCreateEnterprise(EnterpriseX);
            return new ResponseEntity<>(message,HttpStatus.OK);
            }catch (Exception e){
            return new ResponseEntity<>(e.getMessage(),HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }


    //Actualizar una enterprise

    @PutMapping("/UpdateEnterprise")
    public ResponseEntity<ObjetAnswer> putUpdateEnterprise(@RequestBody Enterprise EnterpriseX){
        try {
            Enterprise EnterpriseBD = serviceInterfaceEnterprise.getUpdateEnterprise(EnterpriseX);
            return new ResponseEntity<>(new ObjetAnswer("Actualizacion de la Enterprise exitosa", EnterpriseBD), HttpStatus.OK);
            }catch (Exception e){
            return new ResponseEntity<>(new ObjetAnswer(e.getMessage(),null), HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    //Mapping para eliminar una Enterprise

    @DeleteMapping("/DeleteEnterprise/{idEnterprise}")
    public ResponseEntity<String> DeleteEnterprise(@PathVariable Long idEnterprise){
        try {
            String message = serviceInterfaceEnterprise.getDeleteEnterprise(idEnterprise);
            return new ResponseEntity<>(message, HttpStatus.OK);
            }catch (Exception e){
            return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

}


